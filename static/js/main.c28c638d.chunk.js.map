{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","button","handleKeyup","event","code","setState","key","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAyB,CACvBC,OAAQ,IAFZ,EAaEC,YAAc,SAACC,GACM,UAAfA,EAAMC,KACR,EAAKC,SAAS,CACZJ,OAAQE,EAAMC,OAGhB,EAAKC,SAAS,CACZJ,OAAQE,EAAMG,OApBtB,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKP,eAN5C,kCASE,WACEK,SAASG,oBAAoB,QAASD,KAAKP,eAV/C,oBAyBE,WACE,IAAQD,EAAWQ,KAAKT,MAAhBC,OAER,OACE,qBAAKU,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGV,EAAM,mCACyBA,EADzB,KAEH,kCAjCd,GAAyBW,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.c28c638d.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  button: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    button: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyup);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyup);\n  }\n\n  handleKeyup = (event: KeyboardEvent) => {\n    if (event.code === 'Space') {\n      this.setState({\n        button: event.code,\n      });\n    } else {\n      this.setState({\n        button: event.key,\n      });\n    }\n  };\n\n  render() {\n    const { button } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {button\n            ? `The last pressed key is [${button}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}